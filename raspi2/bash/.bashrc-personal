# my aliases -----------------------------------------
export EDITOR='nvim'
export HISTCONTROL=ignoreboth:erasedups
HISTIGNORE="$HISTIGNORE:jrnl *"
alias v='$EDITOR'
alias vi='$EDITOR'
alias ll='eza -alh --icons'
alias rm='rm -i'
# alias lt='eza -a --tree --level=1'
alias la='ll -ah'
# alias hy='source /home/steve/start-hypr'
alias sdn='shutdown -h now'
alias sdr='shutdown -r now'
alias bat='batcat'

#alias update='sudo pacman -Syyu'
alias update='sudo apt update && sudo apt full-upgrade'

# X1 carbon change screen brightness
alias bhigh='echo 19000 | sudo tee /sys/class/backlight/intel_backlight/brightness'
alias blow='echo 4000 | sudo tee /sys/class/backlight/intel_backlight/brightness'
alias bmed='echo 10000 | sudo tee /sys/class/backlight/intel_backlight/brightness'

alias cond='conda deactivate'
alias cona='conda activate'

# Smart Vimwiki launcher
vw() {
    if command -v alacritty >/dev/null 2>&1; then
        if [ -n "$DISPLAY" ]; then
            alacritty --class VW -e nvim -c 'VimwikiIndex' & disown
            return
        else
            printf '%s\n' 'Alacritty is installed but no GUI session detected. Falling back to nvim.'
        fi
    fi
    nvim -c 'VimwikiIndex'
}


# MD Notes
mdn() {
    if command -v alacritty >/dev/null 2>&1; then
        if [ -n "$DISPLAY" ]; then
            # Run kitty detached so it won't block the shell
            setsid -f alacritty --class MDNOTES -e /home/steve/.scripts/mdnotes.sh >/dev/null 2>&1
        else
            echo "Error: no DISPLAY found (are you running in a GUI session?)" >&2
        fi
    else
        echo "Error: kitty not installed, running in current terminal." >&2
        /home/steve/.scripts/mdnotes.sh &
    fi
}


# Update jrnl entries
alias jpl='source /home/steve/.scripts/pull_jrnl.sh'
alias jps='source /home/steve/.scripts/push_jrnl.sh'

# Update vimwiki entries
alias vpl='source /home/steve/.scripts/pull_vwiki.sh'
alias vps='source /home/steve/.scripts/push_vwiki.sh'

# Update dotfiles
alias dpl='source /home/steve/.scripts/pull_dots.sh'
alias dps='source /home/steve/.scripts/push_dots.sh'

# Update mdnotes entries
alias npl='source /home/steve/.scripts/pull_mdnotes.sh'
alias nps='source /home/steve/.scripts/push_mdnotes.sh'

# kill conky
alias kc='killall -9 conky'

# git section
alias g='git'
alias ga='g add .'
gc() {
    local hostname=$(hostnamectl | awk -F ': ' '/Static hostname/ {print $2}')
    g commit -m "$hostname"
}
alias hn='hostnamectl | awk -F ": " "/Static hostname/ {print \$2}"'
alias gps='g push'
alias gpl='g pull'
alias gs='g status'
alias gst='g stash'
alias gsp='g stash; g pull'
# git section

alias pv='source ~/venv/.scripts/activate'
alias snake='python ~/py-scripts/jan-snake-game.py'
alias fh='history | fzf'
alias df='df -haT --total'
alias ht='htop'
alias bt='btop'
alias free='free -mt'
alias cputemp='sensors | grep Core'
alias fp="\$(fzf --reverse --preview 'batcat --style=numbers --color=always --line-range :500 {}')"
alias fp1="fzf --reverse --preview='batcat --color=always --line-range :500 {}' --.scriptsd shift-up:preview-page-up,shift-down:preview-page-down"
alias fd='finder'
alias tl='task list'
alias tw='task waiting'
alias tm='tmux'
alias lsd='lsd -l'
alias ftf='fastfetch'
alias nf='neofetch'
alias pf='pfetch'
alias zl='zellij'
alias qn='$EDITOR ~/qnotes.md'
alias yy='yazi'
alias gt='python3 ~/repos/tasks/getTagIDsV3.py'
alias hx='helix'
alias py='python3'

alias q='exit'
alias cl='clear'
alias sb='source ~/.bashrc'
alias brc='vi ~/.bashrc-personal'
alias vrc='vi ~/.config/nvim/init.vim'

#weather in terminal
alias wf='curl wttr.in/mason+city?u'
aalias gw='bash ~/.scripts/wmap-weather.sh'
alias gwc='bash ~/.scripts/wmap-weather-city.sh'

# <<< open or edit previewed files with fzf >>> #
export FZF_DEFAULT_OPTS='--height 75% --layout=reverse --border'

fo() {
  IFS=$'\n' out=("$(fzf --preview 'batcat --style=numbers --color=always --line-range :500 {}' --query="$1" --exit-0 --expect=ctrl-o,ctrl-e)")
  key=$(head -1 <<< "$out")
  file=$(head -2 <<< "$out" | tail -1)
  if [ -n "$file" ]; then
    [ "$key" = ctrl-o ] && open "$file" || ${EDITOR:-nvim} "$file"
  fi
}

finder() {
    local dir
    dir=$(find /home/$USER -maxdepth 3 -type d,l | fzf)
    if [[ -n "$dir" ]]; then
        cd "$dir" || return
    fi
}

# Colored man with bat
export MANPAGER="less -R --use-color -Dd+g -Du+b"
#export MANPAGER="sh -c 'col -bx | batcat -l man -p'"

figlet SwineID
pfetch

eval "$(starship init bash)"
